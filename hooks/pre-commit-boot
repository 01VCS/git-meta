#!/bin/bash
#: ${GIT_CID_META_FILE=.gitmeta-cid}
#if [ ! -f ".gitmeta-cid" ]; then touch .gitmeta-cid; fi
#if [ ! -f .gitmeta-cid ]; then touch .gitmeta-cid; fi
#if [ ! -f $GIT_CID_META_FILE ]; then touch $GIT_CID_META_FILE; fi
rocketlaunch_dir=`pwd` #from https://unix.stackexchange.com/a/52919/470623
#echo "This folder: $rocketlaunch_dir"
#if [ ! -f "$rocketlaunch_dir""/""$GIT_CID_META_FILE" ]; then touch "$rocketlaunch_dir""/""$GIT_CID_META_FILE"; fi
#if [ ! -f "$rocketlaunch_dir""/"".gitmeta-cid" ]; then touch "$rocketlaunch_dir""/"".gitmeta-cid"; fi
#echo "DEBUG: ""$rocketlaunch_dir""/"".gitmeta-cid"
#touch "$rocketlaunch_dir""/"".gitmeta-cid"
#touch "$rocketlaunch_dir""/""gitmeta-cid"
#if [ ! -f "gitmeta-cid" ]; then touch "gitmeta-cid"; fi
#mv gitmeta-cid .gitmeta-cid
#mv "$rocketlaunch_dir""/""gitmeta-cid" "$rocketlaunch_dir""/"".cid-gitmeta"

: ${GIT_CACHE_META_FILE=.gitmeta-cid}

if [[ "$OSTYPE" == "darwin"* ]]; then
    GNU='g'
fi
for bin in find touch awk ; do
    BIN=$( echo $bin | tr '[:lower:]' '[:upper:]')
    eval ': ${'$BIN':=$(which $GNU$bin)}'
    if [ "$GNU" == 'g' ] && ! [[ "${!BIN}" =~ /$GNU$bin ]]  ; then
        echo "gnu version of '$bin' file not found." >&2
        exit 1
    fi
done

: ${Tz:=$($FIND -prune -printf '%Tz')}
: ${Tz:=$(date +%z)}
if ! [ "$Tz" ]; then
    echo "%z not supported in 'strftime' in C library." >&2
    exit 1
fi

if [ ! -f .gitmeta-cid ]
   then # if the flag hasn't been placed, this is the first use
      echo "Its your first time using git-meta on this repository!"
      case $@ in
          --store|--stdout)
          case $1 in --store) exec > $GIT_CACHE_META_FILE; esac
          { git ls-tree --name-only -rdz $(git write-tree) | xargs -0 -I NAME $FIND ./NAME -maxdepth 0 \
              \( -printf 'chown -h %U:%G \0%p\n' \) , \
              \( \! -type l -printf 'chmod %#m \0%p\n' \) , \
              \( -printf $TOUCH' -hcmd "%TY-%Tm-%Td %TH:%TM:%TS '$Tz'" \0%p\n' \) , \
              \( -printf $TOUCH' -hcad "%AY-%Am-%Ad %AH:%AM:%AS '$Tz'" \0%p\n' \)
            git ls-files -z | xargs -0 -I NAME $FIND ./NAME -maxdepth 0 \
              \( -printf 'chown -h %U:%G \0%p\n' \) , \
              \( \! -type l -printf 'chmod %#m \0%p\n' \) , \
              \( -printf $TOUCH' -hcmd "%TY-%Tm-%Td %TH:%TM:%TS '$Tz'" \0%p\n' \) , \
              \( -printf $TOUCH' -hcad "%AY-%Am-%Ad %AH:%AM:%AS '$Tz'" \0%p\n' \)
          } | $AWK 'BEGIN {FS="\0"}; {print $1 "'\''" gensub(/'\''/, "'\''\\\\'\'''\''", "g", $2) "'\''" }' ;;
          --apply) sh -e $GIT_CACHE_META_FILE;;
          *) 1>&2 echo "Usage:"
                  echo "  $0 --store|--stdout|--apply";
                  echo "        --store   -f  store meta in file";
                  echo "        --stdout  -c  output to cosole";
                  echo "        --apply   -r  restore meta"; exit 1;;
esac
#Would you like to add all files that are on the working tree (even the not versioned ones)?
#https://www.google.com/search?q=ls+all+files+recursively+except+some&client=ubuntu&hs=fhV&channel=fs&ei=HzWUYffIDKbN1sQPsu6n-AM&oq=ls+all+files+recursively+except+some&gs_lcp=Cgdnd3Mtd2l6EAM6BwgAEEcQsANKBAhBGABQFlgWYJUEaAFwAngAgAG0AYgBtAGSAQMwLjGYAQCgAQHIAQjAAQE&sclient=gws-wiz&ved=0ahUKEwi31M28-530AhWmppUCHTL3CT8Q4dUDCA0&uact=5
   else
      case $@ in
          --store|--stdout)
          case $1 in --store) exec > $GIT_CACHE_META_FILE; esac
          { git diff --name-only -z HEAD | xargs -0 -I NAME $FIND ./NAME -maxdepth 0 \
              \( -printf 'chown -h %U:%G \0%p\n' \) , \
              \( \! -type l -printf 'chmod %#m \0%p\n' \) , \
              \( -printf $TOUCH' -hcmd "%TY-%Tm-%Td %TH:%TM:%TS '$Tz'" \0%p\n' \) , \
              \( -printf $TOUCH' -hcad "%AY-%Am-%Ad %AH:%AM:%AS '$Tz'" \0%p\n' \)
#            git ls-files -mz | xargs -0 -I NAME $FIND ./NAME -maxdepth 0 \
#              \( -printf 'chown -h %U:%G \0%p\n' \) , \
#              \( \! -type l -printf 'chmod %#m \0%p\n' \) , \
#              \( -printf $TOUCH' -hcmd "%TY-%Tm-%Td %TH:%TM:%TS '$Tz'" \0%p\n' \) , \
#              \( -printf $TOUCH' -hcad "%AY-%Am-%Ad %AH:%AM:%AS '$Tz'" \0%p\n' \)
          } | $AWK 'BEGIN {FS="\0"}; {print $1 "'\''" gensub(/'\''/, "'\''\\\\'\'''\''", "g", $2) "'\''" }' ;;
          --apply) sh -e $GIT_CACHE_META_FILE;;
          *) 1>&2 echo "Usage:"
                  echo "  $0 --store|--stdout|--apply";
                  echo "        --store   -f  store meta in file";
                  echo "        --stdout  -c  output to cosole";
                  echo "        --apply   -r  restore meta"; exit 1;;
esac
fi

echo > .gitmeta-cid
