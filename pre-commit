#!/bin/bash

#01VCSHere

echo "Storing files' timestamp, CID/hash; and other files/commit's metadata..."

commit_author="$(git config user.name)"" <""$(git config user.email)"">" 
commit_message=$(cat $1)
current_branch=$(git rev-parse --abbrev-ref HEAD) #from https://dev.to/anibalardid/how-to-check-commit-message-and-branch-name-with-git-hooks-without-any-new-installation-n34
first_remote_url=$(git remote | head -n 1 | xargs git remote get-url) # Get the first remote's URL
first_remote_name=$(git remote | head -n 1) # Define the first remote's name

# https://github.com/typicode/husky/discussions/1171
rocketlaunch_dir=`pwd` #from https://unix.stackexchange.com/a/52919/470623

# Get a list of all staged files
staged_files=$(git diff --cached --name-only)

# Exit if no files are staged
if [ -z "$staged_files" ]; then
    echo "No files staged. Exiting pre-commit hook."
    exit 0
fi

if [ ! -f ".gitmeta-cid" ]; then touch .gitmeta-cid; fi

echo ".gitmeta-cid version: r2 " > .gitmeta-cid #use ">" instead of ">>" as a way of emptying .gitmeta-cid before writing new commit data
echo "Branch: $current_branch" >> .gitmeta-cid
echo "" >> .gitmeta-cid && echo "------------------------------" >> .gitmeta-cid && echo "" >> .gitmeta-cid
echo "Files:" >> .gitmeta-cid

# Hash (IPFS CID) the contents of each staged file, to the pipe
for file in $staged_files; do
    if [ -f "$file" ]; then
        file_cid=$(ipfs add -q --only-hash "$file")
        echo "$file"": ""$file_cid" >> .gitmeta-cid
    fi
done

commit_cid=$(ipfs add -q --only-hash .gitmeta-cid)
echo "commit ""$commit_cid" > .gitmeta #use ">" instead of ">>" as a way of emptying .gitmeta before writing new commit data
echo "Branch: ""$current_branch" >> .gitmeta

# If the .eth file exists, sign the commit data with the Ethereum account
if [ -f ".git/hooks/.eth" ]; then
    eth_account=$(cat .git/hooks/.eth)
#    signature=$(ethereal signature sign --nohash --data="$commit_cid" --signer="$eth_account" --passphrase="your_passphrase_here")
    signature=$(ethereal signature sign --offline --nohash --data="$commit_cid" --signer="$eth_account" --passphrase="$(jq -r '.passphrase' $HOME/.ethereal.json)" --config $HOME/.ethereal.json)
    echo "Signed-off by: $eth_account" >> .gitmeta
    echo "Signature: $signature" >> .gitmeta
    ethereal signature verify --nohash --data="$commit_cid" --signature="$signature" --signer="$eth_account" #from https://github.com/wealdtech/ethereal?tab=readme-ov-file#signature-signer
fi

echo "" >> .gitmeta && echo "------------------------------" >> .gitmeta && echo "" >> .gitmeta
echo ".gitmeta version: r5" >> .gitmeta
echo "Local folder: ""$rocketlaunch_dir" >> .gitmeta
echo "Remote Name: $first_remote_name" >> .gitmeta
echo "Remote URL: $first_remote_url" >> .gitmeta

echo "" >> .gitmeta && echo "------------------------------" >> .gitmeta && echo "" >> .gitmeta

bash .git/hooks/git-meta --store
git add .gitmeta
git add .gitmeta-cid
echo "Done. Meta has been preserved!"

